spring.kafka.bootstrap-servers=localhost:9092
spring.cloud.function.definition=getMessageDto;sendMessageDto
spring.cloud.stream.kafka.binder.brokers=http://localhost:9092

spring.cloud.stream.bindings.sendMessageDto-out-0.destination=TEST_TOPIC_MULTI
spring.cloud.stream.bindings.getMessageDto-in-0.destination=TEST_TOPIC_MULTI
spring.cloud.stream.bindings.getMessageDto-in-0.group=test-group

spring.cloud.stream.kafka.binder.consumer-properties.value.deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.cloud.stream.kafka.binder.consumer-properties.key.deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.cloud.stream.kafka.binder.consumer-properties.schema.registry.url= http://localhost:8081
spring.cloud.stream.kafka.binder.consumer-properties.use.specific.decoder= true
spring.cloud.stream.kafka.binder.consumer-properties.specific.avro.reader =true 

spring.cloud.stream.kafka.binder.producer-properties.value.serilaizer= org.apache.kafka.common.serialization.StringSerializer
spring.cloud.stream.kafka.binder.producer-properties.key.serializer= org.apache.kafka.common.serialization.StringSerializer
spring.cloud.stream.kafka.binder.producer-properties.schema.registry.url= http://localhost:8081
spring.cloud.stream.kafka.binder.consumer-properties.use.specific.encoder= true
spring.cloud.stream.kafka.binder.producer-properties.specific.avro.reader =true 

server.port=8082
